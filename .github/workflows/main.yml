name: Build SpargeAttn Wheel (Windows)

on:
  workflow_dispatch: {}

jobs:
  build-wheel:
    runs-on: windows-10

    steps:
      # 1. Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v4  # клонирует код проекта в runner [2]

      # 2. Установка MSVC (Visual Studio 2022)
      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3  # настраивает компилятор cl.exe [3]
        with:
          arch: x64
          export-path-to-vcvarsall: true
          export-path-to-vs: true

      # 3. Настройка переменных среды для distutils и Ninja
      - name: Configure build environment
        shell: pwsh
        run: |
          echo "DISTUTILS_USE_SDK=1" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MSSdk=1"            | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CMAKE_GENERATOR=Ninja" | Out-File -FilePath $env:GITHUB_ENV -Append

      # 4. Установка CUDA 12.4
      - name: Install CUDA Toolkit 12.4
        uses: Jimver/cuda-toolkit@v0.2.24  # action для установки CUDA [4]
        with:
          cuda: 12.4.0
          sub-packages: '["nvcc","cudart","cublas","curand","cusparse","cufft","thrust"]'
          method: network

      # 5. Экспорт переменных CUDA
      - name: Configure CUDA paths
        shell: pwsh
        run: |
          $cudaPath = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4"
          echo "CUDA_HOME=$cudaPath"  | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CUDA_PATH=$cudaPath"  | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$cudaPath\bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append

      # 6. Установка Python 3.9
      - name: Setup Python 3.9
        uses: actions/setup-python@v5  # устанавливает Python 3.9 [5]
        with:
          python-version: 3.9

      # 7. Установка зависимостей для сборки
      - name: Install build dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip setuptools wheel ninja packaging pybind11  # базовые пакеты для сборки [7]
          pip install torch==2.4.0+cu124 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124  # PyTorch 2.4.0 с поддержкой CUDA 12.4 [6]
          pip install triton-windows  # Triton для Windows

      # 8. Сборка wheel через setup.py
      - name: Build wheel
        shell: pwsh
        run: |
          python setup.py bdist_wheel --dist-dir dist  # формирует WHL-файл

          
      - name: Test installation
        shell: pwsh
        run: |
          $wheelFile = Get-ChildItem -Path dist -Filter *.whl | Select-Object -First 1
          pip install $wheelFile.FullName
          python -c "import spas_sage_attn; print(f'Version: {spas_sage_attn.__version__}')"
          
      # 10. Публикация артефакта
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4  # сохраняет WHL-файл как артефакт сборки [2]
        with:
          name: spargeattn-win-py3.9-cu124
          path: dist/*.whl
