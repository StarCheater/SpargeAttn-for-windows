---
name: Build SpargeAttn Wheels (Windows)
on:
  workflow_dispatch: null
permissions:
  contents: read
jobs:
  install-deps:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
          - "3.9.13"
        cuda-version:
          - "12.4.0"  # Обновлено до совместимой версии
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
          export-path-to-vcvarsall: true
          export-path-to-vs: true
          
      - name: Set Visual Studio environment variables
        shell: pwsh
        run: |
          echo "DISTUTILS_USE_SDK=1" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MSSdk=1" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CMAKE_GENERATOR=Ninja" | Out-File -FilePath $env:GITHUB_ENV -Append
          
      - name: Install CUDA ${{ matrix.cuda-version }}
        uses: Jimver/cuda-toolkit@v0.2.24
        with:
          cuda: ${{ matrix.cuda-version }}
          sub-packages: '["nvcc", "cudart", "cublas", "curand", "cusparse", "cufft", "thrust"]'
          use-local-cache: false
          use-github-cache: false
          method: network
          
      - name: Configure CUDA paths
        shell: pwsh
        run: |
          $cudaVersion = "${{ matrix.cuda-version }}"
          $cudaMajorMinor = $cudaVersion -replace '(\d+\.\d+)\..*', '$1'
          $cudaPath = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v$cudaMajorMinor"
          echo "CUDA_PATH=$cudaPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CUDA_HOME=$cudaPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$cudaPath\bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Python dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel ninja cibuildwheel packaging pybind11
          pip install torch==2.4.0+cu124 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124
          pip install triton-windows
          
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install Python dependencies
        run: pip install -r requirements.txt
          
      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.19.0
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD: "cp39-*"
          CIBW_SKIP: "*-win32"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ENVIRONMENT_WINDOWS: >
            DISTUTILS_USE_SDK=1
            MSSdk=1
            SPARGEATTN_CUDA_ARCH_LIST="8.0"
            SPARGEATTN_WHEEL_VERSION_SUFFIX="+cu124+torch2.4.0"
            CUDA_HOME="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4"
            CUDA_PATH="C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4"
          CIBW_BEFORE_BUILD_WINDOWS: >
            echo "CUDA_HOME=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4" >> $GITHUB_ENV &&
            echo "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4" >> $GITHUB_ENV
          CIBW_BUILD_FRONTEND: "pip"
          CIBW_BUILD_FRONTEND_ARGS: "--no-build-isolation"
          CIBW_TEST_COMMAND: >
            python -c "import spas_sage_attn; print('SpargeAttn import successful')"

          
      - name: Test installation
        shell: pwsh
        run: |
          $wheelFile = Get-ChildItem dist\*.whl | Select-Object -First 1
          pip install $wheelFile.FullName
          python -c "import spas_sage_attn; print(f'Version: {spas_sage_attn.__version__}')"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: spargeattn-win-py${{ matrix.python-version }}-cu${{ matrix.cuda-version }}
          path: dist/*.whl
